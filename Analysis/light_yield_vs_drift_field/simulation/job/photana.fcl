#include "services_dune.fcl"
#include "photpropservices_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "anatreemodule.fcl"
#include "pandoramodules_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "disambigcheck.fcl"

process_name: Mergeana

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "ana_hist.root" }
  Timing:       {}
  RandomNumberGenerator: {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
#  message:      @local::microboone_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::dune35t_simulation_services
}
#services.user.PhotonVisibilityService:      @local::dune35t_photonvisibilityservice
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  1000        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 analyzers:
{
 pmtresponse:       @local::dune35t_simphotoncounter
 anatreecheat:      @local::anatree_anatree
 anatreedc:         @local::anatree_anatree
 anatree:           @local::anatree_anatree
 anatreepandoradc:  @local::anatree_anatree
 anatreepandora:    @local::anatree_anatree
 pandorana:         {module_type: PFParticleAnalysis}
 pandoramonitoring: {module_type: PFParticleMonitoring}
 pandoranadc:         {module_type: PFParticleAnalysis}
 pandoradcmonitoring: {module_type: PFParticleMonitoring}
 disambigcheck:  @local::standard_disambigcheck

}
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ pmtresponse, anatreecheat, anatreedc, anatree,
         pandoranadc, pandoradcmonitoring, anatreepandoradc,
         pandorana, pandoramonitoring, anatreepandora,
	 disambigcheck]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1,ana]  
# end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_merged.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}

### Here, we overwrite ALL module Labels with the ones defined above.

###   NORMAL ANATREE
physics.analyzers.anatree.TrackModuleLabel: ""
physics.analyzers.anatree.HitsModuleLabel: "gaushit"
physics.analyzers.anatree.TrkSpptAssocModuleLabel: "costrk"
physics.analyzers.anatree.HitSpptAssocModuleLabel: "costrk"
physics.analyzers.anatree.ClusterModuleLabel: "linecluster"
physics.analyzers.anatree.CalorimetryModuleLabel: "calo"
physics.analyzers.anatree.MCTruthT0ModuleLabel: "mctrutht0"

###   ANATREE DISAMBIG CHEAT
physics.analyzers.anatreedc.TrackModuleLabel: "costrkdc"
physics.analyzers.anatreedc.HitsModuleLabel: "lineclusterdc"
physics.analyzers.anatreedc.TrkSpptAssocModuleLabel: "costrkdc"
physics.analyzers.anatreedc.HitSpptAssocModuleLabel: "costrkdc"
physics.analyzers.anatreedc.ClusterModuleLabel: "lineclusterdc"
physics.analyzers.anatreedc.CalorimetryModuleLabel: "calodc"
physics.analyzers.anatreedc.MCTruthT0ModuleLabel: "mctrutht0dc"

###   ANATREE CHEAT
physics.analyzers.anatreecheat.TrackModuleLabel: "trackcheat"
physics.analyzers.anatreecheat.HitsModuleLabel: "hitcheat"
physics.analyzers.anatreecheat.TrkSpptAssocModuleLabel: "trackcheat"
physics.analyzers.anatreecheat.HitSpptAssocModuleLabel: "trackcheat"
physics.analyzers.anatreecheat.ClusterModuleLabel: "clustercheat"

# 
### ANATREE FOR PANDORA
physics.analyzers.anatreepandora.TrackModuleLabel:       "particlestitcher"
physics.analyzers.anatreepandora.ClusterModuleLabel:     "pandora"
physics.analyzers.anatreepandora.HitsModuleLabel:        "hit35t"
physics.analyzers.anatreepandora.SimulationLabel:        "largeant"
physics.analyzers.anatreepandora.MCTruthT0ModuleLabel:   "mctrutht0pandora"
physics.analyzers.anatreepandora.CalorimetryModuleLabel: "pandoracalo"

### ANATREE FOR PANDORA DISAMBIG CHEAT
physics.analyzers.anatreepandoradc.TrackModuleLabel:       "particlestitcherdc"
physics.analyzers.anatreepandoradc.ClusterModuleLabel:     "pandoradc"
physics.analyzers.anatreepandoradc.HitsModuleLabel:        "dcheat"
physics.analyzers.anatreepandoradc.SimulationLabel:        "largeant"
physics.analyzers.anatreepandoradc.MCTruthT0ModuleLabel:   "mctrutht0pandoradc"
physics.analyzers.anatreepandoradc.CalorimetryModuleLabel: "pandoracalodc"

### Configure the Pandora Analyzer modules
physics.analyzers.pandoradcmonitoring.UseDaughterPFParticles:  true
physics.analyzers.pandoradcmonitoring.HitFinderModule: "dcheat"
physics.analyzers.pandoradcmonitoring.SpacePointModule: "pandoradc"
physics.analyzers.pandoradcmonitoring.PFParticleModule: "particlestitcherdc"
physics.analyzers.pandoradcmonitoring.TrackModule: "particlestitcherdc"
physics.analyzers.pandoranadc.SpacePointModule: "pandoradc"
physics.analyzers.pandoranadc.PFParticleModule: "particlestitcherdc"
physics.analyzers.pandoranadc.TrackModule: "particlestitcherdc"

### Configure the Pandora Analyzer modules
physics.analyzers.pandoramonitoring.UseDaughterPFParticles:  true
physics.analyzers.pandoramonitoring.HitFinderModule: "hit35t"
physics.analyzers.pandoramonitoring.SpacePointModule: "pandora"
physics.analyzers.pandoramonitoring.PFParticleModule: "particlestitcher"
physics.analyzers.pandoramonitoring.TrackModule: "particlestitcher"
physics.analyzers.pandorana.SpacePointModule: "pandora"
physics.analyzers.pandorana.PFParticleModule: "particlestitcher"
physics.analyzers.pandorana.TrackModule: "particlestitcher"


